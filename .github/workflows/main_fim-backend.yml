# GitHub Actions: Build and deploy Python app to Azure Web App - fim-backend
# Docs:
# - Azure Web Apps Deploy: https://github.com/Azure/webapps-deploy
# - Azure GitHub Actions: https://github.com/Azure/actions
# - Python + Azure App Service: https://aka.ms/python-webapps-actions

name: Build and deploy Python app to Azure Web App - fim-backend

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read  # Required for actions/checkout

    defaults:
      run:
        working-directory: ./backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      # üõ†Ô∏è Optional: Local build to catch issues early
      - name: Create virtual environment and install dependencies
        run: |
          python -m venv antenv
          source antenv/bin/activate
          pip install -r requirements.txt

      - name: Upload artifact for deployment
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: |
            .
            !antenv/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write  # Required for Azure login
      contents: read   # Required for actions/checkout

    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Azure login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_878FF21311234B86B394EA707A31E8F8 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_0DFD0F6E5C8C451AA6418D98728B6A13 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_DF0C8A62096841018DB765772C8D0F3D }}

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'fim-backend'
          slot-name: 'Production'
          startup-command: 'gunicorn --bind=0.0.0.0 --workers=4 backend.app:app'